ExtIO for Hermes receiver.
==========================

Andrea Montefusco - IW0HDV




0. Please act according to GPLv3 license
----------------------------------------

If you redistribute a binary package, please do accordingly to the license.
So, you have to redistribute even the source, even if minimally changed or you
have to do refer to some specific branch into the repository.
If you want to contribute, you can ask a write access to source repository 
and create you own branch.


1. Installation
---------------

1.1 MinGW
---------

The four shared libraries .dll extension files, as provided in 

	https://app.box.com/s/kyx03kram2aw0my6sb9h

have to be copied in the same directory from which the Studio1/HDSDR executable 
runs.


1.2 MSVC
--------

In order to use this DLL you have to install, as prerequisite, the runtime 
for Microsoft Visual C++ 2013 available at

	http://www.microsoft.com/en-us/download/details.aspx?id=40784

Please select the proper release (vcredist_x64.exe or vcredist_x86.exe,
respectively 64 bit or 32 bit), seconding your Windows system requirement.

Next, the two shared libraries .dll extension files, as provided in 

	https://app.box.com/s/zldc8md37actsb5kofhq

have to be copied in the same directory from which the Studio1/HDSDR executable 
runs.

In Debug directory, if any, you find another shared library, that, though, can be 
used only if you have the real compiler installed in your machine (it seems 
that Microsoft explicitly forbids to run an executable with debug info
in a machine where the compiler is not installed [1]).


2. First run
------------

Start Studio1, if the only ExtIO present into the the directory is the Hermes one, 
it is automatically selected.
Next the search thread for the radio hardware is started: a splash screen is shown and all
the network interfaces probed are listed.
If any hardware is found, into the listbox at the bottom of splash screen are listed
all the hardware radio detected.
At this point one has two options:

a) double click on one of radio hardware listed: the specific radio's control panel 
   will be displayed in the right bottom corner of the screen
   
b) press Start on Studio1//HDSDR GUI: the first receiver found is immediately activated.

Option a) is useful to select (before Start on Studio1/HDSDRis pressed) the 
number of receiver that will be used.


3. How to run multiple instances of Studio 1
--------------------------------------------

In order to exploit the multi receiver capabilities of Hermes receiver, 
start the first instance: after that select the maximum number of receiver
you want to use (drop box).
In order to activate further receivers, start more instances of Studio1 
and setup them as you prefer.
If the an instance, after the first, is not started, stop all the Studio1 instances and 
delete the Studio1 registry offending instance with the following command:

   reg DELETE HKEY_CURRENT_USER\Software\SDR_Applications\Studio1\1.0\AppInst_2

in the above example, the instance delete is the third.


4. How to use the Hermes transmitter
------------------------------------

At the moment it is not feasible to use the Hermes transmitter with this DLL.


5. How to compile on Windows
----------------------------

In order to natively compile on Windows, the following prerequisite have to be
fullfilled:

5.1) install MinGW environment according to instructions  here:

http://www.mingw.org/wiki/Getting_Started

5.2) install sources getting the zipped file at

https://github.com/amontefusco/extio-hermes/archive/master.zip

unzip it at some conveniente location in your system: you should 
end with directory called like that

extio-hermes-xxxxxx

where the "xxxxxx" is master or the branch name that you selected.
Please note that using the git client, whilst is perfectly feasible
both via CLI and GUI, is not mandatory, neither advisable, 
unless you want to contribute.


5.3) copy the following pthreads-win32 library components as found in

ftp://sourceware.org/pub/pthreads-win32/dll-latest/dll/x86/pthreadVC2.dll
ftp://sourceware.org/pub/pthreads-win32/dll-latest/include/pthread.h
ftp://sourceware.org/pub/pthreads-win32/dll-latest/include/sched.h
ftp://sourceware.org/pub/pthreads-win32/dll-latest/include/semaphore.h
ftp://sourceware.org/pub/pthreads-win32/dll-latest/lib/x86/pthreadVC2.lib


5.4) open the MinGW (MSYS) shell, make the sources directory current and type

make

if the process ends correctly, you should find the Extio_hpsdr_mgw.dll file
in the same directory.
The makefile even copy the dll in some predefined directory: that couldn't be so right
in your system, so, depending on which SDR software do you want to use
end  where you onstalled it, you could have to copy manually the dll.
Don't forget to copy along even the pthreadVC2.dll and the two others dll
as per 1.2 .





[1] Preparing a Test Machine To Run a Debug Executable,
    http://msdn.microsoft.com/en-us/library/aa985618(v=vs.90).aspx





