ExtIO for Hermes/Mercury receivers.
===================================

Andrea Montefusco - IW0HDV



1. Installation
---------------

The shared library (.dll file), as provided in 

	https://app.box.com/ExtioHpsdr

have to be copied in the same directory from which the Studio1/HDSDR executable 
runs.


2. First run
------------

Start Studio1/HDSDR, if the only ExtIO present into the the directory is the Hpsdr one, 
it is automatically selected.
Next the search thread for the radio hardware is started: a splash screen is shown and all
the network interfaces probed are listed.
If any hardware is found, into the listbox at the bottom of splash screen are listed
all the hardware radio detected.
At this point one has two options:

a) double click on one of radio hardware listed: the specific radio's control panel 
   will be displayed in the right bottom corner of the screen
   
b) press Start on Studio1//HDSDR GUI: the first receiver found is immediately activated.

Option a) is useful to select (before Start on Studio1/HDSDR is pressed) the 
number of receiver that will be activated.


3. How to run multiple instances of Studio 1
--------------------------------------------

In order to exploit the multi receiver capabilities of Hermes/Mercury receivers, 
start the first instance: after that select the maximum number of receiver
you want to use (drop box).
In order to activate further receivers, start more instances of Studio1 
and setup them as you prefer.
If an instance, after the first, is not started, stop all the Studio1 instances and 
delete the Studio1 registry offending instance with the following command:

   reg DELETE HKEY_CURRENT_USER\Software\SDR_Applications\Studio1\1.0\AppInst_2

in the above example, the instance delete is the third.


4. How to use the Hermes transmitter
------------------------------------

At the moment it is not feasible to use the Hermes transmitter with this DLL.
If and when the Extio specifications will be upgraded, encompassing even the TX
option, I will improve the code.


5. How to compile on Windows
----------------------------

In order to natively compile on Windows, the following prerequisite have to be
fullfilled:

5.1) install MinGW environment according to instructions  here:

http://www.mingw.org/wiki/Getting_Started

5.2) install the pthreads_win32 source and compile it; the source is found here:

https://www.sourceware.org/pthreads-win32/


5.3) install sources getting the zipped file at

https://github.com/amontefusco/extio-hermes/archive/mercury.zip

unzip it at some convenient location in your system: you should 
end with directory called like that

extio-hermes-xxxxxx

where the "xxxxxx" is master or the branch name that you selected.
Please note that, using the git client on Windows, whilst is perfectly feasible
both via CLI and GUI, is not mandatory, neither advisable, 
unless you want to contribute to develop the code.
Moreover, take care that the makefile assumes that pthreads library has been installed and compiled
in a directory at the same level of the sources one; if not, change INCLUDES macro in makefile 
accordingly to your local setup.


5.4) open the MinGW (MSYS) shell, make the sources directory current and type

make

if the process ends correctly, you should find the Extio_hpsdr_mgw.dll file
in the same directory.
The makefile even copy the dll in some predefined directory: that couldn't be so right
in your system, so, depending on which SDR software do you want to use
and  where you installed it, you could have to copy manually the dll and/or change
the makefile.


6. How to signal bug/defect/suggest improvements
------------------------------------------------

If you find a bug, please create an issue in GitHub. I will automatically receive a notice.



7. Please act according to GPLv3 license
----------------------------------------

If you redistribute a binary package, please do that accordingly to the license.
So, you have to redistribute the source, even if minimally changed, or you
have to do refer to some specific branch into the repository.
If you want to contribute, signup in GitHub and ask me a write access to source repository.
Or, if you prefer, send me your patches and I will add, mentioning your call/name.


8. Acknowledgments
------------------

Many thanks to 

Ken N9VV
Mark NI0Z
Beppe IK3VIG
Vittorio IK4IRO
Frank
Light Coder
Thomas

for take time to test this code.




